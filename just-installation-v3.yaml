AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for EC2 instance with EKS access using Session Manager and Helm deployment'

Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.medium
  EKSClusterName:
    Description: Name of the EKS cluster
    Type: String
    Default: my-eks-cluster-v7
  AWSRegion:
    Description: AWS Region where the EKS cluster is located
    Type: String
    Default: ap-southeast-1


Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: ami-06d753822bd94c64e  
      IamInstanceProfile: !Ref EC2InstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Update and install dependencies
          yum update -y
          yum install -y docker jq

          # Install AWS CLI v2
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install

          # Install kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /usr/local/bin/

          # Install Helm
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

          # Start Docker service
          systemctl start docker
          systemctl enable docker
      Tags:
        - Key: Name
          Value: EKSConfigInstance

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles: 
        - !Ref EC2Role

  EksAdditionalRoleAccess:
    Type: AWS::EKS::AccessEntry
    Properties:
      ClusterName: !Ref EKSClusterName
      PrincipalArn: !GetAtt EC2Role.Arn
      Type: STANDARD
      AccessPolicies:
        - PolicyArn: arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy
          AccessScope:
            Type: cluster

  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: EKSClusterAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - eks:DescribeCluster
                  - eks:ListClusters
                Resource: '*'

  SSMDocument:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content:
        schemaVersion: '2.2'
        description: 'Configure EKS and deploy Helm chart'
        parameters:
          EKSClusterName:
            type: String
            description: "Name of the EKS cluster"
          AWSRegion:
            type: String
            description: "AWS Region of the EKS cluster"
        mainSteps:
          - action: aws:runShellScript
            name: configureEKSAndHelm
            inputs:
              runCommand:
                - aws eks update-kubeconfig --name "{{EKSClusterName}}" --region "{{AWSRegion}}"
                - aws eks update-kubeconfig --name my-eks-cluster-v7 --region ap-southeast-1
                - kubectl get nodes
                - helm repo add examples https://helm.github.io/examples
                - helm install ahoy examples/hello-world
                - echo "EKS configuration and Helm deployment completed."

  SSMAssociation:
    Type: AWS::SSM::Association
    Properties:
      Name: !Ref SSMDocument
      Parameters:
        EKSClusterName: 
          - !Ref EKSClusterName
        AWSRegion:
          - !Ref AWSRegion
      Targets: 
        - Key: InstanceIds
          Values:
            - !Ref EC2Instance

Outputs:
  InstanceId:
    Description: ID of the EC2 instance
    Value: !Ref EC2Instance